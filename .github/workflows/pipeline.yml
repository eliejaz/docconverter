name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Run tests
      run: mvn test

  analysis:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
      uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Maven cloud
        run:  mvn -B verify sonar:sonar -Dsonar.projectKey=eliejaz_docconverter -Dsonar.organization=eliejaz -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}


  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Build Docker image
      run: docker build -t eliejaz/docconverter:${{ github.sha }} .

    - name: Log in to DockerHub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push Docker image with SHA tag
      run: docker push eliejaz/docconverter:${{ github.sha }}

    - name: Tag Docker image as latest
      run: docker tag eliejaz/docconverter:${{ github.sha }} eliejaz/docconverter:latest

    - name: Push Docker image with latest tag
      run: docker push eliejaz/docconverter:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Kubectl
  #     uses: azure/setup-kubectl@v2
  #     with:
  #       version: 'latest'

  #   - name: Set up Kubeconfig
  #     run: echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

  #   - name: Deploy to Kubernetes
  #     run: kubectl apply -f k8s/k8s-deployment.yml -f k8s/k8s-service.yml

